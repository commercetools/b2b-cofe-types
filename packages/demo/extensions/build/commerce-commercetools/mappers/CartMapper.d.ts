import { Cart } from '../../../node_modules/@b2bdemo/types/build/cart/Cart';
import { BaseAddress as CommercetoolsAddress, Cart as CommercetoolsCart, DiscountCodeInfo as CommercetoolsDiscountCodeInfo, DiscountedLineItemPriceForQuantity as CommercetoolsDiscountedLineItemPriceForQuantity, DiscountedLineItemPortion as CommercetoolsDiscountedLineItemPortion, LineItem as CommercetoolsLineItem, Order as CommercetoolsOrder, Payment as CommercetoolsPayment, PaymentInfo as CommercetoolsPaymentInfo, ShippingInfo as CommercetoolsShippingInfo, ShippingMethod as CommercetoolsShippingMethod, TaxedPrice as CommercetoolsTaxedPrice, ZoneRate as CommercetoolsZoneRate, ReturnInfo as CommercetoolsReturnInfo } from '@commercetools/platform-sdk';
import { LineItem } from '../../../node_modules/@b2bdemo/types/build/cart/LineItem';
import { Address } from '../../../node_modules/@b2bdemo/types/build/account/Address';
import { Order, ReturnInfo } from '../../../node_modules/@b2bdemo/types/build/cart/Order';
import { Locale } from '../Locale';
import { ShippingMethod } from '../../../node_modules/@b2bdemo/types/build/cart/ShippingMethod';
import { ShippingRate } from '../../../node_modules/@b2bdemo/types/build/cart/ShippingRate';
import { ShippingInfo } from '../../../node_modules/@b2bdemo/types/build/cart/ShippingInfo';
import { Payment } from '../../../node_modules/@b2bdemo/types/build/cart/Payment';
import { Tax } from '../../../node_modules/@b2bdemo/types/build/cart/Tax';
import { Discount } from '../../../node_modules/@b2bdemo/types/build/cart/Discount';
export declare class CartMapper {
    static commercetoolsCartToCart: (commercetoolsCart: CommercetoolsCart, locale: Locale, config?: Record<string, string>) => Cart;
    static commercetoolsLineItemsToLineItems: (commercetoolsLineItems: CommercetoolsLineItem[], locale: Locale) => LineItem[];
    static commercetoolsAddressToAddress: (commercetoolsAddress: CommercetoolsAddress) => Address;
    static addressToCommercetoolsAddress: (address: Address) => CommercetoolsAddress;
    static commercetoolsOrderToOrder: (commercetoolsOrder: CommercetoolsOrder, locale: Locale, config?: Record<string, string>) => Order;
    static commercetoolsShippingInfoToShippingInfo: (commercetoolsShippingInfo: CommercetoolsShippingInfo | undefined, locale: Locale) => ShippingInfo | undefined;
    static commercetoolsReturnInfoToReturnInfo: (commercetoolsReturnInfo: CommercetoolsReturnInfo[]) => ReturnInfo[];
    static commercetoolsShippingMethodToShippingMethod: (commercetoolsShippingMethod: CommercetoolsShippingMethod, locale: Locale) => ShippingMethod;
    static commercetoolsZoneRatesToRates: (commercetoolsZoneRates: CommercetoolsZoneRate[] | undefined, locale: Locale) => ShippingRate[] | undefined;
    static commercetoolsPaymentInfoToPayments: (commercetoolsPaymentInfo: CommercetoolsPaymentInfo | undefined, locale: Locale) => Payment[];
    static commercetoolsPaymentToPayment: (commercetoolsPayment: CommercetoolsPayment, locale: Locale) => Payment;
    static commercetoolsDiscountCodesInfoToDiscountCodes: (commercetoolsDiscountCodesInfo: CommercetoolsDiscountCodeInfo[] | undefined, locale: Locale) => Discount[];
    static commercetoolsDiscountCodeInfoToDiscountCode: (commercetoolsDiscountCodeInfo: CommercetoolsDiscountCodeInfo, locale: Locale) => Discount;
    static commercetoolsDiscountedPricesPerQuantityToDiscountTexts: (commercetoolsDiscountedLineItemPricesForQuantity: CommercetoolsDiscountedLineItemPriceForQuantity[] | undefined, locale: Locale) => string[];
    static commercetoolsDiscountedPricesPerQuantityToDiscounts: (commercetoolsDiscountedLineItemPricesForQuantity: CommercetoolsDiscountedLineItemPriceForQuantity[] | undefined, locale: Locale) => Discount[];
    static commercetoolsDiscountedLineItemPortionToDiscount: (commercetoolsDiscountedLineItemPortion: CommercetoolsDiscountedLineItemPortion, locale: Locale) => Discount;
    static commercetoolsTaxedPriceToTaxed: (commercetoolsTaxedPrice: CommercetoolsTaxedPrice | undefined, locale: Locale) => Tax | undefined;
}
